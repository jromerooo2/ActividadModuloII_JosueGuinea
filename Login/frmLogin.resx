<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAZpJREFUWEft
        lrtKA0EUhpPdZBsxwVcQOxVB7LQzIIitvaAWdmIneGtEBGuxUfBSpI/PIN5qfQLtooWxjX7DnCIcxt1N
        ZlKZHz42bOb/DkyWzRQG6TVJkkyWSqWagc8Tcrv/ieN4iaGvXH864d4L10VZ1p8w5EgPVrRZcyjLwyaK
        og3HwL9Yl1qwjCD9VEPSaNKp2mqAIFxVA/KwInX/IDtT8jycSt0/yG6UPA/XUvcPT/aJY0AqdI6l7h9k
        C64hadCpST1Iikif9ZAU7kzHVgOlXC5PI/5Wg1y0WDsltbBhW+cY8K4GdvLGmllZ3rdUGXLAsAdoCfe8
        Kff5rmKXDBImJR6mGbZ32QfjwBVbZf5UKD+B60HrhUecw1adIzxQOw6JFzi3RZ8dCnUtCEBd9Nlh8ZUq
        h+BS9Nlhu/YcAi9w7oo+O5xyxym1tcSDdtevZ0rnSuLDhWi7SkLxVol6oWFcVtl9ivx2m0g+lDQPTbpb
        xmFVfhlCaA6mZkfMn49roOELGrBmOrYaPhGMmRNPB/PcG4Wwh5B/kELhF0neWCzlpX1uAAAAAElFTkSu
        QmCC
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAhhJREFUWEe1
        l7tKA0EYhaNiko2XNxDBzlupbUCwFBFbfQHFB1D0BcQLBEWw1MpCREHRVxAEUUELsTEGL50oNvFyfues
        LOPozM5uDhzY/P9/vhk2u5tNJq6y2WxPLpdbzufzF/ATfY7aInrdHKuJGoMgWMFiVfjzD1cxU5JZFUlP
        WcCPtMXusNieWI613qFkVDQFAbgegZex6AjK9ar7rXrURtGrhHP4vMpeMuF77QXwneAKwG1s/RL67fA9
        Z6vIdrHlLyxYIvATwGGW/5ScnXAeF+YSy/4C6IrAW3ysU9V/VYfZMjMXrPkLkBfC9lmyCrMHzDyz5C+C
        xFssWSWzYY4lf4UggbJklcyGOZb8FYIEypIowAXZiVpRLMdSU60abkDuAlzl8uB5jdRDv6K3iyt/CMc1
        2cBj5Njmn1li/BWBepkYP+GU9pugcVwoFPqIi60AgBsd6OFrsPIKGUMIzmmgJJ4h1lkNCMmLhgnm4wdh
        KrSDEBjQAGm4SLxdGJ7Vwml4mni7MLymhRMbd5T7CwoCmzogBW8QbxcepwsGQCKDOU+8XRieMkGSGMwJ
        4u1CoEMHJPQH3E68m7DjEw2SxMfEugsbGDSAfO3+DIgKm9g2wOLa+U3KpGbcv2cGqJORPQWjSaH81YIz
        sWNa4D/L2ZOsQiRXA4Bya7r8QD1idlIyKpquWrHAOCzvfPKH5Y2+ZG1MZtSoizKZL1hI4KTh5n1TAAAA
        AElFTkSuQmCC
</value>
  </data>
</root>